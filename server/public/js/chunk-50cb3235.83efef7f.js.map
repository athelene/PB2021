{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/selectable/index.ts","webpack:///../../../src/components/VCheckbox/VCheckbox.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///../../../src/components/VDivider/VDivider.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","baseMixins","isActive","expansionPanel","beforeDestroy","render","h","showLazyContent","staticClass","directives","class","form","inheritAttrs","lazyValidation","data","inputs","watchers","errorBag","watch","handler","errors","Object","deep","immediate","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","attrs","novalidate","attrs$","on","submit","e","$slots","valueComparator","type","default","autoGrow","noResize","rowHeight","Number","validator","v","isNaN","parseFloat","rows","parseInt","noResizeHandle","lazyValue","$nextTick","mounted","calculateInputHeight","$refs","height","minHeight","Math","genInput","onInput","onKeyDown","isFocused","ripple","genRipple","center","$createElement","mixins","model","prop","event","id","inputValue","falseValue","trueValue","multiple","label","String","hasColor","computedColor","isDark","isMultiple","undefined","isDirty","rippleState","genLabel","VInput","click","prevent","role","domProps","checked","blur","change","focus","keydown","ref","onBlur","onClick","onChange","onFocus","onKeydown","indeterminate","indeterminateIcon","offIcon","onIcon","inputIndeterminate","computedIcon","validationState","isDisabled","hasError","genCheckbox","checkboxAttrs","VIcon","setTextColor","dense","dark","light","toString","genDefaultSlot","disableIconRotate","expandIcon","hideActions","hasMousedown","isReadonly","genIcon","icon","setBackgroundColor","tabindex","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","toggle","isBooted","vertical","orientation","themeClasses","$listeners"],"mappings":"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","file":"js/chunk-50cb3235.83efef7f.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n","// Styles\nimport './VCheckbox.sass'\nimport '../../styles/components/_selection-controls.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VInput from '../VInput'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-checkbox',\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  data () {\n    return {\n      inputIndeterminate: this.indeterminate,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls': true,\n        'v-input--checkbox': true,\n        'v-input--indeterminate': this.inputIndeterminate,\n      }\n    },\n    computedIcon (): string {\n      if (this.inputIndeterminate) {\n        return this.indeterminateIcon\n      } else if (this.isActive) {\n        return this.onIcon\n      } else {\n        return this.offIcon\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.isDisabled && !this.inputIndeterminate) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n  },\n\n  watch: {\n    indeterminate (val) {\n      // https://github.com/vuetifyjs/vuetify/issues/8270\n      this.$nextTick(() => (this.inputIndeterminate = val))\n    },\n    inputIndeterminate (val) {\n      this.$emit('update:indeterminate', val)\n    },\n    isActive () {\n      if (!this.indeterminate) return\n      this.inputIndeterminate = false\n    },\n  },\n\n  methods: {\n    genCheckbox () {\n      const { title, ...checkboxAttrs } = this.attrs$\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.$createElement(VIcon, this.setTextColor(this.validationState, {\n          props: {\n            dense: this.dense,\n            dark: this.dark,\n            light: this.light,\n          },\n        }), this.computedIcon),\n        this.genInput('checkbox', {\n          ...checkboxAttrs,\n          'aria-checked': this.inputIndeterminate\n            ? 'mixed'\n            : this.isActive.toString(),\n        }),\n        this.genRipple(this.setTextColor(this.rippleState)),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genCheckbox(),\n        this.genLabel(),\n      ]\n    },\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n"],"sourceRoot":""}